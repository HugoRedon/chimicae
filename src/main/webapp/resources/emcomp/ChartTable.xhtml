<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
       xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:composite="http://java.sun.com/jsf/composite">
    <composite:interface >
        <composite:attribute name="googleChartInfo" required="true"  type="hugo.productions.google.GoogleGraphInfo"/>
        <composite:attribute required="true" name="divId" />
        <composite:attribute name="chartType" default="Line"/>
        <composite:attribute name="showTable" default="true"/>
        <composite:attribute name="width" default="800px"/>
        <composite:attribute name="height" default="600px"/>
        <composite:implementation>
            <script type="text/javascript">
            //<![CDATA[           
	            google.load("visualization", "1", {packages:['corechart','table']});     
                google.setOnLoadCallback(drawChart#{cc.attrs.divId});             
                function drawChart#{cc.attrs.divId}() {
                    var data = new google.visualization.DataTable(#{cc.attrs.googleChartInfo.data.toJson()});
                    var options = #{cc.attrs.googleChartInfo.options.toJson()};
                    options.explorer={maxZoomOut:8};
                    var chart = new google.visualization.#{cc.attrs.chartType}Chart(document.getElementById('chart_#{cc.attrs.divId}'));
               
                    options.chartArea= {left:30};
                     chart.draw(data, options);
                     
                     var columns = [];
                    var series = {};
                    for (var i = 0; i < data.getNumberOfColumns(); i++) {
                        columns.push(i);
                        if (i > 0) {
                            series[i - 1] = {};
                        }
                    }
                   
                    
                    google.visualization.events.addListener(chart, 'select', function () {
                    
                            var sel = chart.getSelection();
                            // if selection length is 0, we deselected an element
                            if (sel.length > 0) {
                                // if row is undefined, we clicked on the legend
                                if (sel[0].row === null) {
                                    var col = sel[0].column;
                                    if (columns[col] == col) {
                                        // hide the data series
                                        columns[col] = {
                                            label: data.getColumnLabel(col),
                                            type: data.getColumnType(col),
                                            calc: function () {
                                                return null;
                                            }
                                        };
                   
                                        // grey out the legend entry
                                        series[col - 1].color = '#CCCCCC';
                                    }
                                    else {
                                        // show the data series
                                        columns[col] = col;
                                        series[col - 1].color = null;
                                    }
                                    var view = new google.visualization.DataView(data);
                                    view.setColumns(columns);
                                    chart.draw(view, options);
                                }
                            }
                        });
                    
                    
                    
                    document.getElementById('png_#{cc.attrs.divId}').innerHTML = '<a href="' + chart.getImageURI() + '" target="_blank">Ver gr√°fica como imagen</a>';
                    var table = new google.visualization.Table(document.getElementById('table_#{cc.attrs.divId}'));
                    if( #{cc.attrs.showTable}){                  
                 	   table.draw(data);
                	}
                }
            //]]>
            </script>   
            <h:panelGrid columns="1" >
                <div id="chart_#{cc.attrs.divId}" style="width:#{cc.attrs.width};height: #{cc.attrs.height};"></div>
                <div id="png_#{cc.attrs.divId}"></div>
                <div id="table_#{cc.attrs.divId}" ></div>
            </h:panelGrid>
            <script>
                drawChart#{cc.attrs.divId}();
            </script>
          
        </composite:implementation> 
    </composite:interface>
</html>

